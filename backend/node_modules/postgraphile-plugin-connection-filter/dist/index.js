"use strict";
const tslib_1 = require("tslib");
const ConnectionArgFilterPlugin_1 = tslib_1.__importDefault(require("./ConnectionArgFilterPlugin"));
const PgConnectionArgFilterPlugin_1 = tslib_1.__importDefault(require("./PgConnectionArgFilterPlugin"));
const PgConnectionArgFilterColumnsPlugin_1 = tslib_1.__importDefault(require("./PgConnectionArgFilterColumnsPlugin"));
const PgConnectionArgFilterComputedColumnsPlugin_1 = tslib_1.__importDefault(require("./PgConnectionArgFilterComputedColumnsPlugin"));
const PgConnectionArgFilterCompositeTypeColumnsPlugin_1 = tslib_1.__importDefault(require("./PgConnectionArgFilterCompositeTypeColumnsPlugin"));
const PgConnectionArgFilterRecordFunctionsPlugin_1 = tslib_1.__importDefault(require("./PgConnectionArgFilterRecordFunctionsPlugin"));
const PgConnectionArgFilterBackwardRelationsPlugin_1 = tslib_1.__importDefault(require("./PgConnectionArgFilterBackwardRelationsPlugin"));
const PgConnectionArgFilterForwardRelationsPlugin_1 = tslib_1.__importDefault(require("./PgConnectionArgFilterForwardRelationsPlugin"));
const PgConnectionArgFilterLogicalOperatorsPlugin_1 = tslib_1.__importDefault(require("./PgConnectionArgFilterLogicalOperatorsPlugin"));
const PgConnectionArgFilterOperatorsPlugin_1 = tslib_1.__importDefault(require("./PgConnectionArgFilterOperatorsPlugin"));
const PostGraphileConnectionFilterPlugin = (builder, configOptions) => {
    // eslint-disable-next-line @typescript-eslint/no-var-requires
    const pkg = require("../package.json");
    builder.hook("build", (build) => {
        // Check dependencies
        if (!build.versions) {
            throw new Error(`Plugin ${pkg.name}@${pkg.version} requires graphile-build@^4.1.0 in order to check dependencies (current version: ${build.graphileBuildVersion})`);
        }
        const depends = (name, range) => {
            if (!build.hasVersion(name, range)) {
                throw new Error(`Plugin ${pkg.name}@${pkg.version} requires ${name}@${range} (${build.versions[name]
                    ? `current version: ${build.versions[name]}`
                    : "not found"})`);
            }
        };
        depends("graphile-build-pg", "^4.5.0");
        // Register this plugin
        build.versions = build.extend(build.versions, { [pkg.name]: pkg.version });
        return build;
    });
    const defaultOptions = {
        //connectionFilterAllowedOperators,
        //connectionFilterAllowedFieldTypes,
        connectionFilterArrays: true,
        connectionFilterComputedColumns: true,
        //connectionFilterOperatorNames,
        connectionFilterRelations: false,
        connectionFilterSetofFunctions: true,
        connectionFilterLogicalOperators: true,
        connectionFilterAllowNullInput: false,
        connectionFilterAllowEmptyObjectInput: false,
    };
    const options = Object.assign(Object.assign({}, defaultOptions), configOptions);
    const { connectionFilterRelations, connectionFilterLogicalOperators } = options;
    (0, ConnectionArgFilterPlugin_1.default)(builder, options);
    (0, PgConnectionArgFilterPlugin_1.default)(builder, options);
    (0, PgConnectionArgFilterColumnsPlugin_1.default)(builder, options);
    (0, PgConnectionArgFilterComputedColumnsPlugin_1.default)(builder, options);
    (0, PgConnectionArgFilterCompositeTypeColumnsPlugin_1.default)(builder, options);
    (0, PgConnectionArgFilterRecordFunctionsPlugin_1.default)(builder, options);
    if (connectionFilterRelations) {
        (0, PgConnectionArgFilterBackwardRelationsPlugin_1.default)(builder, options);
        (0, PgConnectionArgFilterForwardRelationsPlugin_1.default)(builder, options);
    }
    if (connectionFilterLogicalOperators) {
        (0, PgConnectionArgFilterLogicalOperatorsPlugin_1.default)(builder, options);
    }
    (0, PgConnectionArgFilterOperatorsPlugin_1.default)(builder, options);
};
module.exports = PostGraphileConnectionFilterPlugin;
//# sourceMappingURL=index.js.map